{"ast":null,"code":"var _jsxFileName = \"/Users/kripton/Desktop/js/hexlet-chat/frontend/src/components/Channel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport SplitButton from 'react-bootstrap/SplitButton';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Channel = _ref => {\n  _s();\n  let {\n    name,\n    removable,\n    id,\n    currentChannelId,\n    handleChoose\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const btnClass = cn('w-100', 'rounded-0', 'text-start', 'btn', {\n    'btn-secondary': id === currentChannelId\n  });\n  const chowClass = cn('d-flex', '', {\n    show: isOpen\n  });\n  const chowClassToggle = cn('dropdown-menu', {\n    show: isOpen\n  });\n  const onClickHandler = () => setIsOpen(prev => !prev);\n  const onBlurHandler = () => setIsOpen(prev => !prev);\n  const onFocusHandler = () => setIsOpen(prev => !prev);\n  if (removable) {\n    return /*#__PURE__*/_jsxDEV(SplitButton, {\n      onClick: handleChoose,\n      id: `dropdown-button-drop-${id}`,\n      variant: id === currentChannelId && 'btn-secondary',\n      title: `${name}`,\n      className: chowClass,\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        eventKey: \"1\",\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        eventKey: \"2\",\n        children: \"\\u041F\\u0435\\u0440\\u0435\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleChoose,\n      id: id,\n      className: btnClass,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"me-1\",\n        children: \"#\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Channel, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Channel;\nexport default Channel;\nvar _c;\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"names":["React","useState","cn","SplitButton","Button","ButtonGroup","Dropdown","Channel","name","removable","id","currentChannelId","handleChoose","isOpen","setIsOpen","btnClass","chowClass","show","chowClassToggle","onClickHandler","prev","onBlurHandler","onFocusHandler"],"sources":["/Users/kripton/Desktop/js/hexlet-chat/frontend/src/components/Channel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport SplitButton from 'react-bootstrap/SplitButton';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nconst Channel = ({ name, removable, id, currentChannelId, handleChoose }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const btnClass = cn('w-100', 'rounded-0', 'text-start', 'btn', {\n    'btn-secondary': id === currentChannelId,\n  });\n  const chowClass = cn('d-flex', '', {\n    show: isOpen,\n  });\n  const chowClassToggle = cn('dropdown-menu', {\n    show: isOpen,\n  });\n\n  const onClickHandler = () => setIsOpen((prev) => !prev);\n  const onBlurHandler = () => setIsOpen((prev) => !prev);\n  const onFocusHandler = () => setIsOpen((prev) => !prev);\n\n  if (removable) {\n    return (\n      <SplitButton\n        onClick={handleChoose}\n        key={id}\n        id={`dropdown-button-drop-${id}`}\n        variant={id === currentChannelId && 'btn-secondary'}\n        title={`${name}`}\n        className={chowClass}>\n        <Dropdown.Item eventKey=\"1\">Удалить</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Переименовать</Dropdown.Item>\n      </SplitButton>\n    );\n  }\n  return (\n    <>\n      <button type=\"button\" onClick={handleChoose} id={id} className={btnClass}>\n        <span className=\"me-1\">#</span>\n        {name}\n      </button>\n    </>\n  );\n};\n\nexport default Channel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,QAAQ,MAAM,0BAA0B;AAAC;AAAA;AAEhD,MAAMC,OAAO,GAAG,QAA6D;EAAA;EAAA,IAA5D;IAAEC,IAAI;IAAEC,SAAS;IAAEC,EAAE;IAAEC,gBAAgB;IAAEC;EAAa,CAAC;EACtE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMc,QAAQ,GAAGb,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE;IAC7D,eAAe,EAAEQ,EAAE,KAAKC;EAC1B,CAAC,CAAC;EACF,MAAMK,SAAS,GAAGd,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE;IACjCe,IAAI,EAAEJ;EACR,CAAC,CAAC;EACF,MAAMK,eAAe,GAAGhB,EAAE,CAAC,eAAe,EAAE;IAC1Ce,IAAI,EAAEJ;EACR,CAAC,CAAC;EAEF,MAAMM,cAAc,GAAG,MAAML,SAAS,CAAEM,IAAI,IAAK,CAACA,IAAI,CAAC;EACvD,MAAMC,aAAa,GAAG,MAAMP,SAAS,CAAEM,IAAI,IAAK,CAACA,IAAI,CAAC;EACtD,MAAME,cAAc,GAAG,MAAMR,SAAS,CAAEM,IAAI,IAAK,CAACA,IAAI,CAAC;EAEvD,IAAIX,SAAS,EAAE;IACb,oBACE,QAAC,WAAW;MACV,OAAO,EAAEG,YAAa;MAEtB,EAAE,EAAG,wBAAuBF,EAAG,EAAE;MACjC,OAAO,EAAEA,EAAE,KAAKC,gBAAgB,IAAI,eAAgB;MACpD,KAAK,EAAG,GAAEH,IAAK,EAAE;MACjB,SAAS,EAAEQ,SAAU;MAAA,wBACrB,QAAC,QAAQ,CAAC,IAAI;QAAC,QAAQ,EAAC,GAAG;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAgB,eACnD,QAAC,QAAQ,CAAC,IAAI;QAAC,QAAQ,EAAC,GAAG;QAAA,UAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA,GANpDN,EAAE;MAAA;MAAA;MAAA;IAAA,QAOK;EAElB;EACA,oBACE;IAAA,uBACE;MAAQ,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAEE,YAAa;MAAC,EAAE,EAAEF,EAAG;MAAC,SAAS,EAAEK,QAAS;MAAA,wBACvE;QAAM,SAAS,EAAC,MAAM;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAO,EAC9BP,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA;EACE,iBACR;AAEP,CAAC;AAAC,GAvCID,OAAO;AAAA,KAAPA,OAAO;AAyCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}