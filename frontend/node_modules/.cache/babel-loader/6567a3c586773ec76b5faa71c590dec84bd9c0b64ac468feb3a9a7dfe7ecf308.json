{"ast":null,"code":"var _jsxFileName = \"/Users/kripton/Desktop/js/hexlet-chat/frontend/src/Init.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './slices/store';\nimport { AuthProvider } from './context/auth';\nimport { useDispatch } from 'react-redux';\nimport { setMessages } from './slices/messagesSlice';\nimport { fetchUsers, setChannels } from './slices/channelsSlice';\nimport { SocketContext, socket } from './context/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Init() {\n  _s();\n  //   const dispatch = useDispatch();\n\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  console.log(store, 'store');\n  console.log(store.getState(), 'getState');\n  console.log({\n    Authorization: `Bearer ${token}`\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await axios.get('/api/v1/data', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(data);\n      store.dispatch(setMessages(data.messages));\n      store.dispatch(setChannels(data.channels));\n      socket.on('connect', () => {\n        setIsConnected(true);\n        console.log('Socket is connected');\n      });\n      socket.on('disconnect', () => {\n        setIsConnected(false);\n        console.log('Socket is disconnect');\n      });\n      return () => {\n        socket.off('connect');\n        socket.off('disconnect');\n        socket.off('pong');\n      };\n    };\n    fetchData();\n    // console.log(state, 'state');\n\n    // dispatch(setChannels(state.channels))\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n        children: /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n          value: socket,\n          children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Init, \"nf+PQypi/DaNIVJaZnZaC4qQS28=\");\n_c = Init;\nexport default Init;\nvar _c;\n$RefreshReg$(_c, \"Init\");","map":{"version":3,"names":["React","useEffect","useState","axios","Provider","BrowserRouter","App","store","AuthProvider","useDispatch","setMessages","fetchUsers","setChannels","SocketContext","socket","Init","isConnected","setIsConnected","connected","console","log","getState","Authorization","token","fetchData","data","get","headers","dispatch","messages","channels","on","off"],"sources":["/Users/kripton/Desktop/js/hexlet-chat/frontend/src/Init.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './slices/store';\nimport { AuthProvider } from './context/auth';\nimport { useDispatch } from 'react-redux';\nimport { setMessages } from './slices/messagesSlice';\nimport { fetchUsers, setChannels } from './slices/channelsSlice';\nimport { SocketContext, socket } from './context/socket';\n\nfunction Init() {\n  //   const dispatch = useDispatch();\n\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  console.log(store, 'store');\n  console.log(store.getState(), 'getState');\n  \n  console.log({ Authorization: `Bearer ${token}` });\n\n  useEffect(() => {\n    \n    const fetchData = async () => {\n      const { data } = await axios.get('/api/v1/data', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      console.log(data);\n      store.dispatch(setMessages(data.messages));\n      store.dispatch(setChannels(data.channels));\n      socket.on('connect', () => {\n        setIsConnected(true);\n        console.log('Socket is connected');\n      });\n\n      socket.on('disconnect', () => {\n        setIsConnected(false);\n        console.log('Socket is disconnect');\n      });\n\n      return () => {\n        socket.off('connect');\n        socket.off('disconnect');\n        socket.off('pong');\n      };\n    };\n    fetchData();\n    // console.log(state, 'state');\n\n    // dispatch(setChannels(state.channels))\n  }, []);\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <AuthProvider>\n          <SocketContext.Provider value={socket}>\n            <App />\n          </SocketContext.Provider>\n        </AuthProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default Init;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,UAAU,EAAEC,WAAW,QAAQ,wBAAwB;AAChE,SAASC,aAAa,EAAEC,MAAM,QAAQ,kBAAkB;AAAC;AAEzD,SAASC,IAAI,GAAG;EAAA;EACd;;EAEA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAACY,MAAM,CAACI,SAAS,CAAC;EAChEC,OAAO,CAACC,GAAG,CAACb,KAAK,EAAE,OAAO,CAAC;EAC3BY,OAAO,CAACC,GAAG,CAACb,KAAK,CAACc,QAAQ,EAAE,EAAE,UAAU,CAAC;EAEzCF,OAAO,CAACC,GAAG,CAAC;IAAEE,aAAa,EAAG,UAASC,KAAM;EAAE,CAAC,CAAC;EAEjDtB,SAAS,CAAC,MAAM;IAEd,MAAMuB,SAAS,GAAG,YAAY;MAC5B,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,cAAc,EAAE;QAC/CC,OAAO,EAAE;UAAEL,aAAa,EAAG,UAASC,KAAM;QAAE;MAC9C,CAAC,CAAC;MACFJ,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;MACjBlB,KAAK,CAACqB,QAAQ,CAAClB,WAAW,CAACe,IAAI,CAACI,QAAQ,CAAC,CAAC;MAC1CtB,KAAK,CAACqB,QAAQ,CAAChB,WAAW,CAACa,IAAI,CAACK,QAAQ,CAAC,CAAC;MAC1ChB,MAAM,CAACiB,EAAE,CAAC,SAAS,EAAE,MAAM;QACzBd,cAAc,CAAC,IAAI,CAAC;QACpBE,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACpC,CAAC,CAAC;MAEFN,MAAM,CAACiB,EAAE,CAAC,YAAY,EAAE,MAAM;QAC5Bd,cAAc,CAAC,KAAK,CAAC;QACrBE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACrC,CAAC,CAAC;MAEF,OAAO,MAAM;QACXN,MAAM,CAACkB,GAAG,CAAC,SAAS,CAAC;QACrBlB,MAAM,CAACkB,GAAG,CAAC,YAAY,CAAC;QACxBlB,MAAM,CAACkB,GAAG,CAAC,MAAM,CAAC;MACpB,CAAC;IACH,CAAC;IACDR,SAAS,EAAE;IACX;;IAEA;EACF,CAAC,EAAE,EAAE,CAAC;EACN,oBACE,QAAC,QAAQ;IAAC,KAAK,EAAEjB,KAAM;IAAA,uBACrB,QAAC,aAAa;MAAA,uBACZ,QAAC,YAAY;QAAA,uBACX,QAAC,aAAa,CAAC,QAAQ;UAAC,KAAK,EAAEO,MAAO;UAAA,uBACpC,QAAC,GAAG;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MACgB;QAAA;QAAA;QAAA;MAAA;IACZ;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACP;AAEf;AAAC,GAlDQC,IAAI;AAAA,KAAJA,IAAI;AAoDb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}