{"ast":null,"code":"import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\nconst messagesAdapter = createEntityAdapter();\nconst initialState = messagesAdapter;\nconst messagesSlice = createSlice({\n  name: 'messages',\n  initialState,\n  reducers: {\n    setMessages(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.messages = payload;\n    }\n  }\n});\nexport const {\n  setMessages\n} = messagesSlice.actions;\nexport default messagesSlice.reducer;","map":{"version":3,"names":["createSlice","createEntityAdapter","messagesAdapter","initialState","messagesSlice","name","reducers","setMessages","state","payload","messages","actions","reducer"],"sources":["/Users/kripton/Desktop/js/hexlet-chat/frontend/src/slices/messagesSlice.js"],"sourcesContent":["import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\n\nconst messagesAdapter = createEntityAdapter();\nconst initialState = messagesAdapter\n\nconst messagesSlice = createSlice({\n  name: 'messages',\n  initialState,\n  reducers: {\n    setMessages(state, { payload }) {\n      state.messages = payload;\n    },\n\n  },\n});\n\nexport const { setMessages } = messagesSlice.actions;\nexport default messagesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,mBAAmB,QAAQ,kBAAkB;AAEnE,MAAMC,eAAe,GAAGD,mBAAmB,EAAE;AAC7C,MAAME,YAAY,GAAGD,eAAe;AAEpC,MAAME,aAAa,GAAGJ,WAAW,CAAC;EAChCK,IAAI,EAAE,UAAU;EAChBF,YAAY;EACZG,QAAQ,EAAE;IACRC,WAAW,CAACC,KAAK,QAAe;MAAA,IAAb;QAAEC;MAAQ,CAAC;MAC5BD,KAAK,CAACE,QAAQ,GAAGD,OAAO;IAC1B;EAEF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF;AAAY,CAAC,GAAGH,aAAa,CAACO,OAAO;AACpD,eAAeP,aAAa,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}