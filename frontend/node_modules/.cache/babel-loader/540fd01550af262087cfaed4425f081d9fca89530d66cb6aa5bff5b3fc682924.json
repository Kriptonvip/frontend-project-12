{"ast":null,"code":"import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\nconst messagesAdapter = createEntityAdapter();\nconst initialState = messagesAdapter.getInitialState();\nconst messagesSlice = createSlice({\n  name: 'messages',\n  initialState,\n  reducers: {\n    setMessages: messagesAdapter.setAll,\n    addMessage: messagesAdapter.addOne,\n    addMessage: messagesAdapter.a\n  }\n});\nexport const {\n  setMessages,\n  addMessage\n} = messagesSlice.actions;\nexport default messagesSlice.reducer;","map":{"version":3,"names":["createSlice","createEntityAdapter","messagesAdapter","initialState","getInitialState","messagesSlice","name","reducers","setMessages","setAll","addMessage","addOne","a","actions","reducer"],"sources":["/Users/kripton/Desktop/js/hexlet-chat/frontend/src/slices/messagesSlice.js"],"sourcesContent":["import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\n\nconst messagesAdapter = createEntityAdapter();\nconst initialState = messagesAdapter.getInitialState();\n\nconst messagesSlice = createSlice({\n  name: 'messages',\n  initialState,\n  reducers: {\n    setMessages: messagesAdapter.setAll,\n    addMessage: messagesAdapter.addOne,\n    addMessage: messagesAdapter.a,\n  },\n});\n\nexport const { setMessages, addMessage } = messagesSlice.actions;\nexport default messagesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,mBAAmB,QAAQ,kBAAkB;AAEnE,MAAMC,eAAe,GAAGD,mBAAmB,EAAE;AAC7C,MAAME,YAAY,GAAGD,eAAe,CAACE,eAAe,EAAE;AAEtD,MAAMC,aAAa,GAAGL,WAAW,CAAC;EAChCM,IAAI,EAAE,UAAU;EAChBH,YAAY;EACZI,QAAQ,EAAE;IACRC,WAAW,EAAEN,eAAe,CAACO,MAAM;IACnCC,UAAU,EAAER,eAAe,CAACS,MAAM;IAClCD,UAAU,EAAER,eAAe,CAACU;EAC9B;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,WAAW;EAAEE;AAAW,CAAC,GAAGL,aAAa,CAACQ,OAAO;AAChE,eAAeR,aAAa,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}