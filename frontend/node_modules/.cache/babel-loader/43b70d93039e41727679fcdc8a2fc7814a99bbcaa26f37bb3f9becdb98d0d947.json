{"ast":null,"code":"import { createAsyncThunkcreateSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  channels: [],\n  currentChannelId: 1,\n  isLoading: true\n};\nconst channelsSlice = createSlice({\n  name: 'channels',\n  initialState,\n  reducers: {\n    setChannels(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.channels = payload;\n    }\n  }\n});\nexport const {\n  setChannels\n} = channelsSlice.actions;\nexport default channelsSlice.reducer;","map":{"version":3,"names":["createAsyncThunkcreateSlice","initialState","channels","currentChannelId","isLoading","channelsSlice","createSlice","name","reducers","setChannels","state","payload","actions","reducer"],"sources":["/Users/kripton/Desktop/js/hexlet-chat/frontend/src/slices/channelsSlice.js"],"sourcesContent":["import { createAsyncThunkcreateSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  channels: [],\n  currentChannelId: 1,\n  isLoading: true,\n};\n\nconst channelsSlice = createSlice({\n  name: 'channels',\n  initialState,\n  reducers: {\n    setChannels(state, { payload }) {\n      state.channels = payload;\n    },\n  },\n});\n\nexport const { setChannels } = channelsSlice.actions;\nexport default channelsSlice.reducer;\n"],"mappings":"AAAA,SAASA,2BAA2B,QAAQ,kBAAkB;AAC9D,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,gBAAgB,EAAE,CAAC;EACnBC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,aAAa,GAAGC,WAAW,CAAC;EAChCC,IAAI,EAAE,UAAU;EAChBN,YAAY;EACZO,QAAQ,EAAE;IACRC,WAAW,CAACC,KAAK,QAAe;MAAA,IAAb;QAAEC;MAAQ,CAAC;MAC5BD,KAAK,CAACR,QAAQ,GAAGS,OAAO;IAC1B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF;AAAY,CAAC,GAAGJ,aAAa,CAACO,OAAO;AACpD,eAAeP,aAAa,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}